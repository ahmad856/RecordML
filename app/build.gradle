apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.example.recordml"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
//    packagingOptions {
//        exclude 'META-INF/INDEX.LIST'
//        exclude 'META-INF/DEPENDENCIES'
//    }
}

ext {
    supportLibraryVersion = '25.3.1'
    googleApiClientVersion = '1.22.0'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
//    implementation 'com.google.cloud:google-cloud-speech:1.13.0'

    // Dependencies for Google API Client Libraries
    compile("com.google.http-client:google-http-client:$googleApiClientVersion") {
        exclude module: 'httpclient'
        exclude module: 'jsr305'
    }
    compile("com.google.api-client:google-api-client-android:$googleApiClientVersion"){
        exclude module: 'httpclient'
        exclude module: 'jsr305'
    }
    compile("com.google.apis:google-api-services-language:v1-rev501-1.25.0") {
        exclude module: 'httpclient'
        exclude module: 'jsr305'
    }

}

task copySecretKey(type: Copy) {
    def File secretKey = file "$System.env.GOOGLE_APPLICATION_CREDENTIALS"
    from secretKey.getParent()
    include secretKey.getName()
    into 'src/main/res/raw'
    rename secretKey.getName(), "credential.json"
}
preBuild.dependsOn(copySecretKey)

